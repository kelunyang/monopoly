{
  "_args": [
    [
      {
        "raw": "browserid-verify@~0.1.2",
        "scope": null,
        "escapedName": "browserid-verify",
        "name": "browserid-verify",
        "rawSpec": "~0.1.2",
        "spec": ">=0.1.2 <0.2.0",
        "type": "range"
      },
      "c:\\Users\\Kelunyang\\OneDrive\\Webapps\\monopoly\\node_modules\\express-persona"
    ]
  ],
  "_from": "browserid-verify@>=0.1.2 <0.2.0",
  "_id": "browserid-verify@0.1.2",
  "_inCache": true,
  "_installable": true,
  "_location": "/browserid-verify",
  "_npmUser": {
    "name": "chilts",
    "email": "andychilton@gmail.com"
  },
  "_npmVersion": "1.3.8",
  "_phantomChildren": {},
  "_requested": {
    "raw": "browserid-verify@~0.1.2",
    "scope": null,
    "escapedName": "browserid-verify",
    "name": "browserid-verify",
    "rawSpec": "~0.1.2",
    "spec": ">=0.1.2 <0.2.0",
    "type": "range"
  },
  "_requiredBy": [
    "/express-persona"
  ],
  "_resolved": "https://registry.npmjs.org/browserid-verify/-/browserid-verify-0.1.2.tgz",
  "_shasum": "af6f50b7631ac4b713065b6d2e409568099624ad",
  "_shrinkwrap": null,
  "_spec": "browserid-verify@~0.1.2",
  "_where": "c:\\Users\\Kelunyang\\OneDrive\\Webapps\\monopoly\\node_modules\\express-persona",
  "bugs": {
    "url": "http://github.com/chilts/browserid-verify-node/issues",
    "email": "andychilton@gmail.com"
  },
  "dependencies": {
    "tunnel": "0.0.x"
  },
  "description": "Verify BrowserID assertions.",
  "devDependencies": {
    "nock": "0.18.x",
    "tape": "1.0.x"
  },
  "directories": {},
  "dist": {
    "shasum": "af6f50b7631ac4b713065b6d2e409568099624ad",
    "tarball": "https://registry.npmjs.org/browserid-verify/-/browserid-verify-0.1.2.tgz"
  },
  "homepage": "https://github.com/chilts/browserid-verify-node#readme",
  "keywords": [
    "persona",
    "browserid",
    "verify",
    "verifier",
    "mozilla"
  ],
  "license": "MPL 2.0",
  "main": "browserid-verify.js",
  "maintainers": [
    {
      "name": "chilts",
      "email": "andychilton@gmail.com"
    }
  ],
  "name": "browserid-verify",
  "optionalDependencies": {},
  "readme": "browserid-verify - Verify BrowserID assertions.\n\n[![Build Status](https://travis-ci.org/chilts/browserid-verify-node.png)](https://travis-ci.org/chilts/browserid-verify-node)\n\n[![NPM](https://nodei.co/npm/browserid-verify.png)](https://nodei.co/npm/browserid-verify/)\n\n## Synopsis ##\n\n```\nvar verify = require('browserid-verify')();\n\n// once you have an assertion from the browser\nverify(assertion, audience, function(err, email, response) {\n    if (err) {\n        // make sure no session is created\n        return console.log('There was an error : ' + err);\n    }\n\n    // If email is set, then the assertion was ok and response contains the full response.\n    // Set up your session and cookie as normal.\n\n    // If email is not set, then the request was fine but the assertion didn't check out.\n    // Do not set up the session and cookie. Instead provide a message to your users.\n\n    console.log('The asserted email address is : ' + email);\n    console.log('The entire reponse is :', response);\n});\n```\n\n## Verify Options ##\n\n### type ###\n\n```\ntype: (local|remote) - default: remote\n```\n\nCurrently this package uses the remote verifier hosted at 'https://verifier.login.persona.org/verify' when using remote\nverification. You can change this by changing the ```url``` option (see below).\n\n### url ###\n\n```\nurl: (a string) - default: https://verifier.login.persona.org/verify\n```\n\nThe remote URL to use to verify the assertion can be overriden with this option. For example, if you only allow\noutgoing requests from your webservers to another machine within your private network.\n\nAll requests to the URL will use the POST method with a 'Content-Type' of 'application/x-www-form-urlencoded' and the\n'assertion' and 'audience' parameters as part of the form being encoded and sent.\n\nYou may use a 'http' service but you must make sure that you trust this service e.g. it may be a service you have\nrunning within your provate network.\n\nYou may also provide a port (8080) and path (/). For example 'http://localhost:8080/'.\n\n### agent ###\n\nYou can specify you own ```agent``` so that you are not limited by the in-built 5 request limit of Node's internal\nagent. You can also specify one to be used for a forward-proxy (see the next section).\n\nFor example, if you would like to turn off the 5 concurrent requests limit, try this (see examples/agent.js for full\nprogram):\n\n```\nvar https = require('https');\n\nvar agent = new https.Agent();\nagent.maxSockets = 1000000;\n\nvar verify = require('browserid-verify')({\n    type  : 'remote',\n    agent : agent,\n});\n```\n\n### proxy ###\n\nA forward proxy can be used if you have firewalled off outgoing http connections from your webservers. If, for example,\nyou have a host within your vpn that you can proxy requests through, then you can use that. e.g. using\n'http://proxy:8080'. Obviously your webservers must be able to make outgoing connections to this internal host.\n\n```\nvar verify = require('browserid-verify')({\n    type  : 'remote',\n    proxy : 'http://proxy:8080',\n});\n```\n\n## Remote v Local Verification ##\n\nCurrently BrowserID is in Beta and therefore the assertion format is subject to change. Therefore we use the hosted\nservice at https://verifier.login.persona.org/verify to do the verification for us. This means you won't need to change\nyour code if the assertion format changes.\n\nHowever, once BrowserID is out of Beta and the assertion format is stable, we will switch this library to use local\nverification. Once this is done it achieves one of BrowserIDs goals which is that of distributed verification with no\ncentral service needed.\n\nTherefore, this library currently only implements remote verification.\n\nHowever, the library will also perform local verification at some point in the future and will provide an easy upgrade\npath to make sure it is easy to switch from one to the other.\n\nBoth remote and local verification functions will have the same API to allow this to happen.\n\n## Using this package in a Site, Framework or Framework Plugin ##\n\nIt is not advised to perform remote or local verification yourself since things may change especially during the beta\nperiod (even though we'll give you plenty of time if things do change). It is much easier to depend on this package to\nmake sure you're doing the right thing.\n\nPlease depend on this package in your framework or framework plugin. This package will stay up to date with the latest\nbest practices regarding both remote and (once implemented) local verification. There are some other packages which\nhave helped in the past but these are old and out of date.\n\nIn general, you should depend on \"major.minor.x\" in your package so that you will always get bug fixes. If we release\na change in the API (a 'minor' release) or a breaking change (a 'major' release) we will endeavour to help you upgrade\nyour package to this new version.\n\n## License ##\n\nMPL 2.0\n\nThis Source Code Form is subject to the terms of the Mozilla Public\nLicense, v. 2.0. If a copy of the MPL was not distributed with this\nfile, You can obtain one at http://mozilla.org/MPL/2.0/.\n\n(Ends)\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/chilts/browserid-verify-node.git"
  },
  "scripts": {
    "test": "set -e; find test/ -name '*.js' -exec echo --- {} --- ';' -exec node {} ';'"
  },
  "version": "0.1.2"
}
